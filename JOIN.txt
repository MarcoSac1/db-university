# db-query JOIN

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT * FROM `students` INNER JOIN `degrees` ON `student`.`degree_id = `degrees`.`id` WHERE `degrees`,`name`='Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze

SELECT `degrees`.* FROM `degrees` INNER JOIN`department` ON `degrees`.`department_id`=`departments`.`id` WHERE`departments`.`name`='Dipartimento di Neuroscienze' AND `degrees`.`level`='magistrale'

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT  `teachers`.`name`,`teachers`.`surname`,`degrees`.`name`,`courses`.*FROM `courses` INNER JOIN `course_teacher` ON `courses`.`id` =`course_teacher`.`course_id` INNER JOIN `teachers` ON `course_teacher`.`teachers_id` =`teachers`.`id` INNER JOIN `degrees` ON `degrees`.`id`=`courses`.`degree_id` WHERE`teachers`.`id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

SELECT  `student` .*, `degrees`.`name` FROM `student` INNER JOIN `degrees` ON `degree`.`id` =`student`.`degree_id` INNER JOIN`department` ON `department`.`id`=`degree`.`department_id` GROUP BY `department`.`id`;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.`name`,`courses`.`name`,`teachers`.* FROM `degrees` INNER JOIN `courses` ON `degrees`.`id` = `courses`.`degree_id`INNER JOIN`course_teacher` ON `course_teacher`.`course_id`=`courses`.`id`
INNER JOIN `teachers` ON `course_teacher`.`teachers_id`=`teachers`.`id`;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

SELECT DISTINCT `teachers`.`name`,`teachers`.* FROM`teachers` INNER JOIN`course_teacher` ON `teachers`.`id` =`course_teacher`.`teachers_id` INNER JOIN `courses` ON `course_teacher`.`course_id` =`courses`.`id` INNER JOIN `degree` ON `courses`.`degree_id` = `degree`.`id`
INNER JOIN `department` ON `degrees`.`department_id`=`department`.`id` WHERE `department`.`name` = `Dipartimento di  Matematica`

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.

SELECT `student`.`name`,`student`.`surname`, `courses`.`id`, 
COUNT(`exam_student`.`vote`) AS `tentativi`, MAX (`exam_student`.`vote`) AS `miglior_voto`
FROM`student` 
INNER JOIN`exam_student` ON `student`.`id`=`exam_student`.`student_id` 
INNER JOIN `exams` ON  `exam_student`.`exam_id` =`exams`.`id` 
INNER JOIN `courses` ON `exams`.`course_id`=`courses`.`id` 
GROUP BY `courses`.`id`,`student`.`id`
HAVING `miglior_voto` >= 18